/**
 * Focus
 */

$focus-width: 3px;
$color-focus: rgba($color-primary, 0.3);

// Note: this uses an outline because box-shadow and border don't support an
// offset. Outlines don't support rounding, so this can't be used for circular
// elements such as radio inputs.
%focus {
  outline-width: $focus-width;
  outline-color: $color-focus;
  outline-style: solid;
  outline-offset: 0;
  animation-name: collapse-outline;
  animation-duration: 0.2s;
}

@keyframes collapse-outline {
  from {
    outline-offset: $focus-width * 3;
  }
}

// For circular elements
%focus-rounded {
  box-shadow: inset 0 0 0 $focus-width $color-focus;
}

.enable-focus-indicators {
  :focus:not(%nofocus) {
    @extend %focus;
  }

  // Experimental
  :focus {
    z-index: 0;
  }
}

select:focus,
input[type=radio]:focus,
input[type=checkbox]:focus {
  &, .enable-focus-indicators & {
    outline: $color-focus auto;
  }
}

/**
 * Buttons
 */

@mixin button-core {
  line-height: 1rem;
  border: 1px solid;
  border-radius: $radius;
  padding: 0.5rem 1rem;
  @include sb-transition($duration: $transition-duration-fast);
  @extend .wspace-nowrap;

  @include disabled {
    pointer-events: none;
  }
}

@mixin button-focus {
  &:focus, .enable-focus-indicators &:focus {
    outline: 0;
    box-shadow: 0 0 0 3px $color-primary-light;
  }
}

.btn-wide {
  min-width: 8rem;
}

.btn-gaps {
  @extend .gaps-h-0x25;
}

.btn-primary {
  @include button-core;
  @include button-focus;
  color: $color-on-primary;
  background-color: $color-primary;
  border-color: transparent;
  @include busy {
    background-color: $color-primary-dark;
  }
  @include disabled {
    opacity: 0.5;
  }
}

.btn-secondary {
  @include button-core;
  @include button-focus;
  color: $color-primary;
  background-color: rgba($color-on-surface, 0.06);
  border-color: transparent;
  @include busy {
    color: $color-primary-dark;
    background-color: rgba($color-primary, 0.12);
  }
  @include if-current {
    color: $color-on-primary;
    background-color: $color-primary-dark;
  }
  @include disabled {
    opacity: 0.5;
  }
}

.btn-transparent {
  @include button-core;
  @include button-focus;
  color: $color-primary;
  background-color: transparent;
  border-color: transparent;
  @include busy {
    color: $color-primary-dark;
    background-color: rgba($color-primary, 0.12);
    border-color: transparent;
  }
  @include disabled {
    opacity: 0.5;
  }
}

/**
 * Inputs
 */

.input-height {
 height: 2rem;
}

.input-padding {
 padding: 0.25rem 0.75rem;
}

@mixin input-core {
  @extend .input-height;
  @extend .input-padding;
  // min-width: 14.5rem;
  border-radius: $radius;
  border: 1px solid;
  @include sb-transition($duration: $transition-duration-faster);
  @include media-sm {
    min-width: auto;
  }
}

@mixin input-focus {
  &:focus, .enable-focus-indicators &:focus {
    outline: 0;
    background-color: $color-surface;
    border-color: $color-primary;
    box-shadow: 0 0 0 3px $color-primary-light;
  }
}

.input {
  @include input-core;
  @include input-focus;
  border-color: rgba($color-on-surface, 0.12);
  background-color: $color-surface;
}

.input::placeholder {
  @extend .weight-light;
  @include sb-transition;
  opacity: 1;
  color: rgba($color-on-surface, 0.32);
}

.textarea {
  @extend .input;
  height: auto;
}

.select-native {
  @extend .input;
  padding-right: 1.5rem;
  appearance: none;
  background-image: inline-feather-svg('<polyline points="6 9 12 15 18 9" />', rgba($color-on-surface, 0.60));
  background-color: $color-surface;
  background-position: right 0.25rem center;
  background-repeat: no-repeat;
  background-size: 16px;
}

/**
 * Dropdown Menu
 */

$dropdown-color-edge:   hsb(208, 10%, 86%);
$dropdown-color-bg:     $color-surface;
$dropdown-color-shadow: rgba(black, 0.1);

.dropdown-chevron::before {
  content: '';
  display: block;
  border: 7px solid transparent;
  border-bottom-color: $dropdown-color-edge;
}

.dropdown-chevron::after {
  content: '';
  left: 50%;
  bottom: 0;
  display: block;
  position: absolute;
  border: 5px solid transparent;
  border-bottom-color: $dropdown-color-bg;
  transform: translateX(-50%);
}

.dropdown {
  background-color: $dropdown-color-bg;
  border-radius: $radius;
  @extend .shadow-dept-2;
}

.dropdown-padding {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.dropdown-item-padding {
  padding: 0.5rem 1rem;
}

.dropdown-hr-padding {
  padding: 0.25rem 1rem;
}

.dropdown-position {
  top: 100%;
  right: 0rem;
  position: absolute;
  margin: 0.25rem;
  @extend .col-start-stretch;
}

/**
 * Dialog
 */

.dialog {
  z-index: $z-index-dialog;
  @extend .fix-fit;
}

.dialog-overlay {
  @extend .abs-fit;
  @extend .bg-overlay;
}

.dialog-scrollable {
  height: 100%;
  @extend .relative;
  @extend .overflow-y-scroll;
  -webkit-overflow-scrolling: touch;
}

.dialog-center {
  min-height: 100vh;
  @extend .col-center-center;
  @extend .padding-1;
}

/**
 * Misc
 */

.bg-circle-trick {
  @extend .bg-cover;
  @extend .circle;
  @include sb-height-percentage-trick(100%);
}

.square-em {
  width: 1em;
  height: 1em;
}

.feather {
  @extend .square-em;
  @extend .flex-shrink-none;
}

%hide {
  opacity: 0;
  visibility: hidden;
}

%show {
  opacity: 1;
  visibility: visible;
}

.show-on-parent-hover {
  @extend %hide;
}

:hover > .show-on-parent-hover {
  @extend %show;
}

.show-on-parent-busy {
  @extend %hide;
}

@include busy {
  > .show-on-parent-busy {
    @extend %show;
  }
}

.show-on-trigger-hover {
  @extend %hide;
}

.trigger:hover .show-on-trigger-hover {
  @extend %show;
}

.list-item:last-child .hide-in-list-last-child {
  display: none;
}

.z-index-1 {
  z-index: 1;
}

.z-index-2 {
  z-index: 2;
}

.z-index-tooltip {
  z-index: $z-index-tooltip;
}

@mixin form-element-spacing($val) {
  margin-top: $val;

  &:first-child,
  :not(#{&}):first-child + & {
    margin-top: 0;
  }
}

.form-element-spacing {
  @include form-element-spacing(1rem);
}

.mobile-form-element-spacing {
  @include form-element-spacing(0.75rem);
}

.drawer-link {
  padding: 0.75rem 0.75rem;
  @extend .rounded;
  @extend .gaps-h-1x25;
  @extend .row-start-center;
}

.drawer-link * {
  line-height: 1;
}

.width-0 {
  width: 0;
}

.width-1x5 {
  width: 1.5rem;
}

.width-2x5 {
  width: 2.5rem;
}

.width-3x5 {
  width: 3.5rem;
}
