html {
  color: $color-on-body;
  background-color: $color-body;
}

/*
This makes SVG icons automatically compatible with foreground colors and
"interactive" styles.

NOTE: this must be defined before any color classes: .fg-, .bg-, .theme-, etc.
This way, the inherited color can be overridden with a class directly on the SVG
element. If this is defined later, inherited colors take priority over local
ones.
*/
.feather {
  color: inherit;
  stroke: currentColor;
}

.fg-transparent      {color: transparent}
.bg-transparent      {background-color: transparent}

.fg-link             {color: $color-link}
.bg-link             {background-color: $color-link}

.bg-overlay          {background-color: rgba($color-on-surface, 0.32)}

.fg-surface          {color: $color-surface}
.bg-surface          {background-color: $color-surface}

.fg-on-surface       {color: $color-on-surface}
.bg-on-surface       {background-color: $color-on-surface}

.fg-on-surface-pale  {color: rgba($color-on-surface, 0.60)}
.bg-on-surface-pale  {background-color: rgba($color-on-surface, 0.60)}

.fg-primary          {color: $color-primary}
.bg-primary          {background-color: $color-primary}

.fg-on-primary       {color: $color-on-primary}
.bg-on-primary       {background-color: $color-on-primary}

.fg-primary-light    {color: $color-primary-light}
.bg-primary-light    {background-color: $color-primary-light}

.fg-on-primary-light {color: $color-on-primary-light}
.bg-on-primary-light {background-color: $color-on-primary-light}

.fg-primary-dark     {color: $color-primary-dark}
.bg-primary-dark     {background-color: $color-primary-dark}

.fg-on-primary-dark  {color: $color-on-primary-dark}
.bg-on-primary-dark  {background-color: $color-on-primary-dark}

.fg-accent           {color: $color-accent}
.bg-accent           {background-color: $color-accent}

.fg-on-accent        {color: $color-on-accent}
.bg-on-accent        {background-color: $color-on-accent}

.fg-error            {color: $color-error}
.bg-error            {background-color: $color-error}

/**
 * Link Decoration
 */

@mixin theme-link {
  color: $color-link;
}

@mixin theme-link-current {
  @include if-current {
    color: $color-on-surface;
  }
}

@mixin theme-link-href-busy {
  @include if-href {
    @include sb-transition($duration: $transition-duration-fast);
    @include busy {
      color: $color-link;
      text-decoration: underline;
    }
  }
}

@mixin theme-link-button-busy {
  @include if-button {
    @include sb-transition($duration: $transition-duration-fast);
    @include busy {
      color: $color-link;
      text-decoration: underline;
    }
  }
}

.theme-link {@include theme-link;}
.theme-link-current {@include theme-link-current;}
.theme-link-href-busy {@include theme-link-href-busy;}
.theme-link-button-busy {@include theme-link-button-busy;}

// This is for link colors AND other decorations, if any. Note: links should be
// either regular or bold. Flip-flopping between the two depending on link state
// would cause layout jitter.

.decorate-link {
  @include theme-link;
  @include theme-link-current;
  @include theme-link-href-busy;
  @include theme-link-button-busy;
}

.decorate-links a {
  @include noclass {
    @extend .decorate-link;
  }
}

.decorate-fancy-link {
  @extend .decorate-link;
}

.decorate-fancy-links a {
  @include noclass {
    @extend .decorate-fancy-link;
  }
}

/**
 * Menu Decoration
 */

@mixin theme-dark-menu {
  color: $color-on-primary;
}

@mixin theme-dark-menu-busy {
  @include busy {
    background-color: $color-primary-dark;
  }
}

@mixin theme-dark-menu-expanded {
  @include if-expanded {
    background-color: $color-primary-dark;
  }
}

.theme-dark-menu {@include theme-dark-menu;}
.theme-dark-menu-busy {@include theme-dark-menu-busy;}
.theme-dark-menu-expanded {@include theme-dark-menu-expanded;}

.decorate-dark-menu-item {
  @include theme-dark-menu;
  @include theme-dark-menu-busy;
  @include theme-dark-menu-expanded;
}

/**
 * Drawer (side menu)
 */

@mixin theme-drawer-link {
  background-color: $color-surface;
  color: $color-on-surface;
}

@mixin theme-drawer-link-busy {
  @include busy {
    background-color: rgba($color-on-surface, 0.06);
  }
}

@mixin theme-drawer-link-current {
  @include if-current {
    background-color: rgba($color-primary, 0.12);
    color: $color-primary;

    .theme-drawer-icon {
      color: $color-primary;
    }
  }
}

@mixin theme-drawer-icon {
  color: rgba($color-on-surface, 0.60);
}

.theme-drawer-link {@include theme-drawer-link;}
.theme-drawer-link-busy {@include theme-drawer-link-busy;}
.theme-drawer-link-current {@include theme-drawer-link-current;}
.theme-drawer-icon {@include theme-drawer-icon;}

.decorate-drawer-link {
  @include theme-drawer-link;
  @include theme-drawer-link-busy;
  @include theme-drawer-link-current;
}

/**
 * Icon buttons
 */

@mixin theme-icon-button {
  color: rgba($color-on-surface, 0.60);
}

@mixin theme-icon-button-busy {
  @include busy {
    color: $color-on-surface;
  }
}

@mixin theme-icon-button-current {
  @include if-current {
    color: $color-on-surface;
  }
}

.theme-icon-button {@include theme-icon-button;}
.theme-icon-button-busy {@include theme-icon-button-busy;}
.theme-icon-button-current {@include theme-icon-button-current;}

.decorate-icon-button {
  @include theme-icon-button;
  @include theme-icon-button-busy;
  @include theme-icon-button-current;
}

/**
 * Snackbar (notifications)
 */

@mixin theme-snackbar {
  background-color: $color-snackbar;
  color: $color-on-snackbar;
}

.theme-snackbar {
  @include theme-snackbar;
}

.snackbar {
  min-width: 18rem;
  min-height: 3rem;
  @extend .rounded;
  @extend .theme-snackbar;
  @extend .shadow-dept-2;
}


/**
 * Shadows
 */

.shadow-dept-1 {
  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}
.shadow-dept-2 {
  box-shadow: 0 2px 6px rgba(0,0,0,0.16), 0 2px 6px rgba(0,0,0,0.23);
}
.shadow-dept-3 {
  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
}
.shadow-dept-4 {
  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
}
.shadow-dept-5 {
  box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
}

/**
 * Misc
 */

@mixin theme-placeholder {
  background-color: rgba($color-primary, 0.12);
}

.theme-placeholder {@include theme-placeholder;}

.decorate-placeholder {
  @include theme-placeholder;
}
