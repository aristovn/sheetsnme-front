html {
  color: $color-text;
  background-color: $color-body;
}

/*
This makes SVG icons automatically compatible with foreground colors and
"interactive" styles.

NOTE: this must be defined before any color classes: .fg-, .bg-, .theme-, etc.
This way, the inherited color can be overridden with a class directly on the SVG
element. If this is defined later, inherited colors take priority over local
ones.
*/
.feather {
  color: inherit;
  stroke: currentColor;
}

.fg-transparent    {color: transparent}
.bg-transparent    {background-color: transparent}

.fg-white          {color: $color-white}
.bg-white          {background-color: $color-white}

.fg-black          {color: $color-black}
.bg-black          {background-color: $color-black}

.fg-black-25       {color: $color-black-25}
.bg-black-25       {background-color: $color-black-25}

.fg-black-35       {color: $color-black-35}
.bg-black-35       {background-color: $color-black-35}

.fg-black-50       {color: $color-black-50}
.bg-black-50       {background-color: $color-black-50}

.fg-black-70       {color: $color-black-70}
.bg-black-70       {background-color: $color-black-70}

.fg-black-75       {color: $color-black-75}
.bg-black-75       {background-color: $color-black-75}

.fg-black-97       {color: $color-black-97}
.bg-black-97       {background-color: $color-black-97}

.fg-primary-100    {color: $color-primary-100}
.bg-primary-100    {background-color: $color-primary-100}

.fg-primary-125    {color: $color-primary-125}
.bg-primary-125    {background-color: $color-primary-125}

.fg-primary-250    {color: $color-primary-250}
.bg-primary-250    {background-color: $color-primary-250}

.fg-primary-275    {color: $color-primary-275}
.bg-primary-275    {background-color: $color-primary-275}

.fg-link           {color: $color-link}
.bg-link           {background-color: $color-link}

.fg-warning        {color: $color-warning}
.bg-warning        {background-color: $color-warning}

.fg-accent         {color: $color-accent}
.bg-accent         {background-color: $color-accent}

.fg-success        {color: $color-success}
.bg-success        {background-color: $color-success}

.bg-overlay-dark   {background-color: $color-overlay-dark}
.bg-overlay-light  {background-color: $color-overlay-light}

/**
 * Link Decoration
 */

@mixin theme-link {
  color: $color-link;
}

@mixin theme-link-current {
  @include if-current {
    color: $color-text;
  }
}

@mixin theme-link-href-busy {
  @include if-href {
    @include sb-transition($duration: $transition-duration-fast);
    @include busy {
      color: $color-link;
      text-decoration: underline;
    }
  }
}

@mixin theme-link-button-busy {
  @include if-button {
    @include sb-transition($duration: $transition-duration-fast);
    @include busy {
      color: $color-link;
      text-decoration: underline;
    }
  }
}

.theme-link {@include theme-link;}
.theme-link-current {@include theme-link-current;}
.theme-link-href-busy {@include theme-link-href-busy;}
.theme-link-button-busy {@include theme-link-button-busy;}

// This is for link colors AND other decorations, if any. Note: links should be
// either regular or bold. Flip-flopping between the two depending on link state
// would cause layout jitter.

.decorate-link {
  @include theme-link;
  @include theme-link-current;
  @include theme-link-href-busy;
  @include theme-link-button-busy;
}

.decorate-links a {
  @include noclass {
    @extend .decorate-link;
  }
}

.decorate-fancy-link {
  @extend .decorate-link;
}

.decorate-fancy-links a {
  @include noclass {
    @extend .decorate-fancy-link;
  }
}

@mixin theme-link-white {
  color: $color-white;
}

@mixin theme-link-white-current {
  @include if-current {
    color: $color-white;
  }
}

@mixin theme-link-white-href-busy {
  @include if-href {
    @include sb-transition($duration: $transition-duration-fast);
    @include busy {
      color: $color-white;
      text-decoration: underline;
    }
  }
}

.theme-link-white {@include theme-link-white;}
.theme-link-white-current {@include theme-link-white-current;}
.theme-link-white-href-busy {@include theme-link-white-href-busy;}

.decorate-white-link {
  @include theme-link-white;
  @include theme-link-white-current;
  @include theme-link-white-href-busy;
}

.decorate-white-links a {
  @include noclass {
    @extend .decorate-white-link;
  }
}

/**
 * Menu Decoration
 */

@mixin theme-light-menu {
  color: $color-link;
}

@mixin theme-light-menu-busy {
  @include busy {
    background-color: $color-black-97;
  }
}

@mixin theme-light-menu-current {
  @include if-current {
    background-color: $color-black-97;
    color: $color-text;
  }
}

@mixin theme-light-menu-icon {
  svg {
    color: $color-black-50;
  }
}

.theme-light-menu {@include theme-light-menu;}
.theme-light-menu-busy {@include theme-light-menu-busy;}
.theme-light-menu-current {@include theme-light-menu-current;}
.theme-light-menu-icon {@include theme-light-menu-icon;}

.decorate-light-menu-item {
  @include theme-light-menu;
  @include theme-light-menu-busy;
  @include theme-light-menu-current;
  @include theme-light-menu-icon;
}

@mixin theme-dark-menu {
  color: $color-white;
}

@mixin theme-dark-menu-busy {
  @include busy {
    background-color: hsb(204, 84, 68);
  }
}

@mixin theme-dark-menu-expanded {
  @include if-expanded {
    background-color: hsb(204, 84, 56);
  }
}

@mixin theme-dark-menu-icon {
  svg {
    color: hsb(204, 69, 37);
  }
}

.theme-dark-menu {@include theme-dark-menu;}
.theme-dark-menu-busy {@include theme-dark-menu-busy;}
.theme-dark-menu-expanded {@include theme-dark-menu-expanded;}
.theme-dark-menu-icon {@include theme-dark-menu-icon;}

.decorate-dark-menu-item {
  @include theme-dark-menu;
  @include theme-dark-menu-busy;
  @include theme-dark-menu-expanded;
}
